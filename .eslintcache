[{"D:\\Hochschule Rheinmain\\Web-Engineering\\Pokecoin\\src\\index.js":"1","D:\\Hochschule Rheinmain\\Web-Engineering\\Pokecoin\\src\\context\\user\\UserContext.js":"2","D:\\Hochschule Rheinmain\\Web-Engineering\\Pokecoin\\src\\pages\\shop\\CardShop.js":"3","D:\\Hochschule Rheinmain\\Web-Engineering\\Pokecoin\\src\\pages\\register\\RegisterPageStyles.js":"4","D:\\Hochschule Rheinmain\\Web-Engineering\\Pokecoin\\src\\pages\\main\\MainPage.js":"5","D:\\Hochschule Rheinmain\\Web-Engineering\\Pokecoin\\src\\utiels\\constans\\RESTConstans.js":"6","D:\\Hochschule Rheinmain\\Web-Engineering\\Pokecoin\\src\\workers\\blockWorker.js":"7","D:\\Hochschule Rheinmain\\Web-Engineering\\Pokecoin\\src\\models\\CardPackage.js":"8","D:\\Hochschule Rheinmain\\Web-Engineering\\Pokecoin\\src\\pages\\login\\LoginPage.js":"9","D:\\Hochschule Rheinmain\\Web-Engineering\\Pokecoin\\src\\reportWebVitals.js":"10","D:\\Hochschule Rheinmain\\Web-Engineering\\Pokecoin\\src\\models\\PokemonList.js":"11","D:\\Hochschule Rheinmain\\Web-Engineering\\Pokecoin\\src\\pages\\main\\MainPageHeader.js":"12"},{"size":517,"mtime":1607953123348,"results":"13","hashOfConfig":"14"},{"size":91,"mtime":1610039672897,"results":"15","hashOfConfig":"14"},{"size":3812,"mtime":1610715292716,"results":"16","hashOfConfig":"14"},{"size":226,"mtime":1607953123353,"results":"17","hashOfConfig":"14"},{"size":5707,"mtime":1610465995402,"results":"18","hashOfConfig":"14"},{"size":373,"mtime":1610039672915,"results":"19","hashOfConfig":"14"},{"size":1052,"mtime":1610039672916,"results":"20","hashOfConfig":"14"},{"size":1040,"mtime":1610296917773,"results":"21","hashOfConfig":"14"},{"size":2068,"mtime":1610294168516,"results":"22","hashOfConfig":"14"},{"size":375,"mtime":1607953123354,"results":"23","hashOfConfig":"14"},{"size":1034,"mtime":1610474515109,"results":"24","hashOfConfig":"14"},{"size":1015,"mtime":1610464392818,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"r4h24f",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Hochschule Rheinmain\\Web-Engineering\\Pokecoin\\src\\index.js",[],["55","56"],"D:\\Hochschule Rheinmain\\Web-Engineering\\Pokecoin\\src\\context\\user\\UserContext.js",[],["57","58"],"D:\\Hochschule Rheinmain\\Web-Engineering\\Pokecoin\\src\\pages\\shop\\CardShop.js",["59","60","61"],"D:\\Hochschule Rheinmain\\Web-Engineering\\Pokecoin\\src\\pages\\register\\RegisterPageStyles.js",[],"D:\\Hochschule Rheinmain\\Web-Engineering\\Pokecoin\\src\\pages\\main\\MainPage.js",["62","63","64"],"import * as crypto from \"crypto\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\n\r\n/* eslint-disable import/no-webpack-loader-syntax */\r\nimport DefaultWorker from \"worker-loader!../../workers/blockWorker.js\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Paper } from \"@material-ui/core\";\r\nimport { UserContext } from \"../../context/user/UserContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PokemonList from \"../../models/PokemonList\";\r\nimport RESTConstans from \"../../utiels/constans/RESTConstans\";\r\nimport MainPageHeader from \"./MainPageHeader\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grid: {\r\n    width: \"100%\",\r\n    margin: \"0px\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function MainPage() {\r\n  const { token } = useContext(UserContext);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [coins, setCoins] = useState(0);\r\n  const [worker, setWorker] = useState();\r\n  const [difficulty, setDifficulty] = useState();\r\n  const [pokemon, setPokemon] = useState([]);\r\n  const history = useHistory();\r\n\r\n  //######################## UI - ELEMENTE ############################################\r\n\r\n  const classes = useStyles();\r\n  /**\r\n   * Beim First render werden Username + CoinAmount gefetcht\r\n   * und der blockWorker initialisiert\r\n   * UI-Element Username\r\n   */\r\n  useEffect(() => {\r\n    fetchUserName();\r\n    fetchCoins();\r\n    fetchDifficulty();\r\n    initBlockWorker();\r\n    fetchCards();\r\n  }, []);\r\n\r\n  //###################################################################################\r\n\r\n  const mineCoins = () => {\r\n    collectInfoForBlock();\r\n  };\r\n\r\n  const goToShop = () => {\r\n    history.push(\"/cardShop\"); //hängt an aktuelle UL drann\r\n  };\r\n\r\n  async function collectInfoForBlock() {\r\n    // Letzten Block holen und hash rausziehen\r\n    fetchDifficulty();\r\n    const lastBlock = await fetchData(\r\n      RESTConstans.DOMAIN + RESTConstans.LASTBLOCK\r\n    );\r\n    const prevBlockHash = lastBlock.hash;\r\n    //neuen Block bauen mit hash als prevHash\r\n    const newBlock = buildBlock(prevBlockHash);\r\n    //Block wird zum minen dem blockWorker übergeben\r\n    const workerEvent = { block: { ...newBlock }, difficulty: difficulty };\r\n    worker.postMessage(workerEvent);\r\n  }\r\n\r\n  function buildBlock(prevHash) {\r\n    const newBlock = {\r\n      previousHash: prevHash,\r\n      data: \"Sieben Schneeschipper schippen sieben Schippen Schnee.\",\r\n      timestamp: Date.now(),\r\n      nonce: 0,\r\n    };\r\n    return newBlock;\r\n  }\r\n\r\n  async function postOurBlock(postBlock) {\r\n    const response = await postData(\r\n      RESTConstans.DOMAIN + RESTConstans.BLOCKS,\r\n      postBlock\r\n    ).then(() => {\r\n      fetchCoins();\r\n    });\r\n    console.log(\"response\", response);\r\n    return response;\r\n  }\r\n\r\n  function initBlockWorker() {\r\n    const tempWorker = new DefaultWorker();\r\n    tempWorker.onmessage = (event) => {\r\n      const postBlock = { ...event.data };\r\n      console.log(\"Mein Block\" + JSON.stringify(postBlock));\r\n      postOurBlock(postBlock);\r\n    };\r\n    setWorker(tempWorker);\r\n    return () => {\r\n      tempWorker.terminate();\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Coins-amount wird gefecht und im Sate gespeichert\r\n   */\r\n  async function fetchCoins() {\r\n    const response = await fetchData(RESTConstans.DOMAIN + RESTConstans.COINS);\r\n    setCoins(response.amount);\r\n  }\r\n  /**\r\n   * Aktueller UserName wird gefecht und gespeichert\r\n   */\r\n  async function fetchUserName() {\r\n    const response = await fetchData(RESTConstans.DOMAIN + RESTConstans.ME);\r\n    setUserName(response.username);\r\n  }\r\n\r\n  async function fetchCards() {\r\n    const response = await fetchData(RESTConstans.DOMAIN + RESTConstans.CARDS);\r\n    console.log(response.cards.map((poke) => poke));\r\n    setPokemon([...response.cards]);\r\n    console.log(\"Whats in the PokemonArray\", pokemon);\r\n  }\r\n\r\n  async function fetchDifficulty() {\r\n    const response = await fetchData(\r\n      RESTConstans.DOMAIN + RESTConstans.DIFFICULTY\r\n    );\r\n    setDifficulty(response);\r\n    console.log(\"response nach dem Fetch\", response);\r\n    console.log(\"difficulty\" + difficulty);\r\n  }\r\n\r\n  /**\r\n   * fetchen ausgelagert\r\n   *\r\n   * @param {*} url\r\n   */\r\n  async function fetchData(url) {\r\n    const response = await fetch(url, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        token: token,\r\n      },\r\n    }).then((response) => response.json());\r\n\r\n    return response;\r\n  }\r\n  /**\r\n   *\r\n   * Posten einen Blocks ausgelagert\r\n   * @param {*} url\r\n   * @param {*} Block\r\n   */\r\n  async function postData(url, Block) {\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(Block),\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        token: token,\r\n      },\r\n    }).then((response) => response.json());\r\n    return response;\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={3} className={classes.grid}>\r\n      <MainPageHeader user={{ userName: userName, coins: coins }} />\r\n\r\n      <Grid item xs={9}>\r\n        <Paper className={classes.paper}>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={mineCoins}>\r\n            Start Mining\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={goToShop}>\r\n            CardShop\r\n          </Button>\r\n        </Paper>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <PokemonList pokemon={pokemon}></PokemonList>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n",["65","66"],"D:\\Hochschule Rheinmain\\Web-Engineering\\Pokecoin\\src\\utiels\\constans\\RESTConstans.js",[],["67","68"],"D:\\Hochschule Rheinmain\\Web-Engineering\\Pokecoin\\src\\workers\\blockWorker.js",[],"D:\\Hochschule Rheinmain\\Web-Engineering\\Pokecoin\\src\\models\\CardPackage.js",[],"D:\\Hochschule Rheinmain\\Web-Engineering\\Pokecoin\\src\\pages\\login\\LoginPage.js",["69"],"D:\\Hochschule Rheinmain\\Web-Engineering\\Pokecoin\\src\\reportWebVitals.js",[],"D:\\Hochschule Rheinmain\\Web-Engineering\\Pokecoin\\src\\models\\PokemonList.js",["70"],"D:\\Hochschule Rheinmain\\Web-Engineering\\Pokecoin\\src\\pages\\main\\MainPageHeader.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"71","replacedBy":"75"},{"ruleId":"73","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":16,"nodeType":"79","messageId":"80","endLine":1,"endColumn":21},{"ruleId":"77","severity":1,"message":"81","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":13},{"ruleId":"82","severity":1,"message":"83","line":56,"column":6,"nodeType":"84","endLine":56,"endColumn":8,"suggestions":"85"},{"ruleId":"77","severity":1,"message":"86","line":1,"column":13,"nodeType":"79","messageId":"80","endLine":1,"endColumn":19},{"ruleId":"77","severity":1,"message":"87","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":13},{"ruleId":"82","severity":1,"message":"88","line":50,"column":6,"nodeType":"84","endLine":50,"endColumn":8,"suggestions":"89"},{"ruleId":"71","replacedBy":"90"},{"ruleId":"73","replacedBy":"91"},{"ruleId":"71","replacedBy":"92"},{"ruleId":"73","replacedBy":"93"},{"ruleId":"77","severity":1,"message":"94","line":11,"column":11,"nodeType":"79","messageId":"80","endLine":11,"endColumn":16},{"ruleId":"77","severity":1,"message":"78","line":1,"column":16,"nodeType":"79","messageId":"80","endLine":1,"endColumn":21},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],["95"],["96"],"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'react' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchCoins', 'fetchPackages', and 'fetchUserName'. Either include them or remove the dependency array.","ArrayExpression",["97"],"'crypto' is defined but never used.","'axios' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchCards', 'fetchCoins', 'fetchDifficulty', 'fetchUserName', and 'initBlockWorker'. Either include them or remove the dependency array.",["98"],["95"],["96"],["95"],["96"],"'token' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [fetchCoins, fetchPackages, fetchUserName]",{"range":"103","text":"104"},"Update the dependencies array to be: [fetchCards, fetchCoins, fetchDifficulty, fetchUserName, initBlockWorker]",{"range":"105","text":"106"},[1671,1673],"[fetchCoins, fetchPackages, fetchUserName]",[1624,1626],"[fetchCards, fetchCoins, fetchDifficulty, fetchUserName, initBlockWorker]"]